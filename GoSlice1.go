package main

import "fmt"

//========基础切片介绍==========
//物质守恒定律：物质不会消失也不会产品，只能由一种物质转换成另一种物质，
//物质不会凭空产品，只是从一种形态转换成另一种形态了。

//  slice切片的使用
//  原由： Go 数组的长度不可改变，在特定的场景中就不太适用
//  所以：Go 中提供了一种灵活，功能强悍的内置类型切片("动态数组")
//  相比较： 切片的长度是不固定的，可以追加元素，在追加时可能使切片的容量增大

//定义切片(切片不需要说明长度)

//切片初始化  []表示是切片类型，1,2,3 是切片初始化的值

//切片是可索引的，并且可以由len()方法获取长度。  len 是实际占用的数组长度(实际占用)
//切片提供了计算容量的方法cap() 可以测量切片最长可以达到多少  cap 是切片的最大的容量(虚拟总长度)

//结论： 在没有给cap赋值的时候，它的容量是和实际占用的长度是一致的
func main() {
	var numbers = make([]int, 100, 1000)
	printSlice(numbers)
}
func printSlice(x []int) {
	fmt.Printf("len=%d cap=%d slice=%v\n", len(x), cap(x), x)
}
